[General]
network = Mesh2D

# size of our grid
Mesh2D.rows = 3
Mesh2D.columns = 3

# clock speed
Mesh2D.clockPeriod = 2ns # 500MHz

# component type definitions

Mesh2D.appType = "HaecComm.Core.App"
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceNcEncAuthFlit"
Mesh2D.routerType = "HaecComm.Routers.Router"
Mesh2D.router[*].internalType = "HaecComm.Routers.RouterRandomXOrY"
Mesh2D.channelType = "HaecComm.Core.HaecChannel"

# packet generation parameters
**.producer.injectionProb = 0.2
#**.producer.generatePairs = false
#**.app[6].producer.enabled = true
#**.producer.enabled = false
#**.producer.singleTarget = true
#**.producer.singleTargetId = 2

# network coding and authentication parameters
**.ni[*].generationSize = 2
**.ni[*].numCombinations = 3

**.ni[*].encUnits = 10
**.ni[*].encCycles = 10
**.ni[*].authUnits = 10
**.ni[*].authCycles = 10

# retransmission buffer
**.ni[*].retransmissionBuffer.bufSize = 24
**.ni[*].retransmissionBuffer.bufLookupCycles = 2

# ARQs and arrivals
**.ni[*].arrivalManager.arqLimit = 1
**.ni[*].arrivalManager.arqIssueTimeout = 8
**.ni[*].arrivalManager.arqAnswerTimeoutBase = 5
**.ni[*].arrivalManager.outOfOrderIdGracePeriod = 0

# results/statistics output formatting
output-vector-file = "${resultdir}/${configname}-${runnumber}-vec.sqlite3"
output-scalar-file = "${resultdir}/${configname}-${runnumber}-sca.sqlite3"

outputvectormanager-class = "omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class = "omnetpp::envir::SqliteOutputScalarManager"