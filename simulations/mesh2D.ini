#########################################################
### General - Parameters shared by all configurations ###
#########################################################
[General]
network = Mesh2D

# size of our grid
Mesh2D.rows = 8
Mesh2D.columns = 8

# clock speed
Mesh2D.clockPeriod = 2ns # 500MHz

# warmup time
warmup-period = 1us # 500 cycles, just to be sure

# results/statistics output formatting
output-vector-file = "${resultdir}/${configname}-${runnumber}-vec.sqlite3"
output-scalar-file = "${resultdir}/${configname}-${runnumber}-sca.sqlite3"

outputvectormanager-class = "omnetpp::envir::SqliteOutputVectorManager"
outputscalarmanager-class = "omnetpp::envir::SqliteOutputScalarManager"

# statistics collected
**.vector-record-eventnumbers = false
**.result-recording-modes = default

# component type definitions
Mesh2D.appType = "HaecComm.Core.App"
Mesh2D.routerType = "HaecComm.Routers.Router"
Mesh2D.channelType = "HaecComm.Core.HaecChannel"

# crypto modules
**.ni[*].encUnits = 3
**.ni[*].authUnits = 9

# retransmission buffer
**.ni[*].retransmissionBuffer.bufSize = 4096

# router node input queue sizes
**.router[*].nodeInputQueue[*].maxLength = 6

# packet generation parameters
Mesh2D.useGlobalTransmissionIds = true
**.producer.generatePairs = true

# ARQs and arrivals
**.ni[*].arrivalManager.arqLimit = 1
**.ni[*].arrivalManager.arqIssueTimeout = 12
**.ni[*].arrivalManager.arqAnswerTimeoutBase = 12
**.ni[*].arrivalManager.lastArqWaitForOngoingVerifications = true

# routing strategy
Mesh2D.router[*].internalType = "HaecComm.Routers.RouterXY"
Mesh2D.router[*].softQueueLimits = false

# Attackers (set 1)
#**.router[6].attackProb = 0.2
#**.router[8].attackProb = 0.2
#**.router[20].attackProb = 0.2
#**.router[33].attackProb = 0.2
#**.router[35].attackProb = 0.2
#**.router[46].attackProb = 0.2
#**.router[52].attackProb = 0.2
#**.router[59].attackProb = 0.2

# Attackers (set 2)
#**.router[14].attackProb = 0.2
#**.router[16].attackProb = 0.2
#**.router[21].attackProb = 0.2
#**.router[32].attackProb = 0.2
#**.router[42].attackProb = 0.2
#**.router[45].attackProb = 0.2
#**.router[49].attackProb = 0.2
#**.router[60].attackProb = 0.2

# Attackers (set 3)
#**.router[10].attackProb = 0.2
#**.router[12].attackProb = 0.2
#**.router[19].attackProb = 0.2
#**.router[36].attackProb = 0.2
#**.router[38].attackProb = 0.2
#**.router[40].attackProb = 0.2
#**.router[51].attackProb = 0.2
#**.router[62].attackProb = 0.2

#########################################################
### Minimal - No network coding, no security          ###
#########################################################
[Config Minimal]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterface"
**.ni[*].networkCoding = false

# traffic generation
**.producer.injectionProb = 0.2/4 # 1 pair = 4 flits into the network

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 1

#########################################################
### Enc-Auth-Flit - Encryption and individual flit    ###
### authentication (one MAC flit per data flit)       ###
#########################################################
[Config Enc-Auth-Flit]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceEncAuthFlit"
**.ni[*].networkCoding = false

# traffic generation
**.producer.injectionProb = 0.2/4 # 1 pair = 4 flits into the network

# crypto parameters
**.ni[*].encCycles = 2
**.ni[*].authCycles = 6

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 1

#########################################################
### Enc-Auth-Split - Encryption, then splitting, then ###
### interwoven flit authentication (data and MAC in   ###
### same flit)                                        ###
#########################################################
[Config Enc-Auth-Split]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceEncAuthSplit"
**.ni[*].networkCoding = false

# traffic generation
**.producer.injectionProb = 0.2/4 # 1 pair = 4 flits into the network

# crypto parameters
**.ni[*].encCycles = 2
**.ni[*].authCycles = 5

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 1

#########################################################
### NC-Enc-Auth-Flit - Encryption, then network       ###
### coding, then individual flit authentication       ###
### (one MAC flit per data flit)                      ###
#########################################################
[Config NC-Enc-Auth-Flit]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceNcEncAuthFlit"
**.ni[*].networkCoding = true

# traffic generation
#**.producer.injectionProb = 0.2/6 # 1 pair = 6 flits into the network (G2C3)
**.producer.injectionProb = 0.2/8 # 1 pair = 8 flits into the network (G2C4)

# network coding parameters
**.ni[*].generationSize = 2
#**.ni[*].numCombinations = 3
**.ni[*].numCombinations = 4

# crypto parameters
**.ni[*].encCycles = 2
**.ni[*].authCycles = 6

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 2

#########################################################
### NC-Enc-Auth-Split - Encryption, then splitting,   ###
### then network coding, then interwoven flit         ###
### authentication (data and MAC in the same flit)    ###
#########################################################
[Config NC-Enc-Auth-Split]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceNcEncAuthSplit"
**.ni[*].networkCoding = true

# traffic generation
#**.producer.injectionProb = 0.2/6 # 1 pair = 6 flits into the network (G2C3)
**.producer.injectionProb = 0.2/8 # 1 pair = 8 flits into the network (G2C4)

# network coding parameters
**.ni[*].generationSize = 2
#**.ni[*].numCombinations = 3
**.ni[*].numCombinations = 4

# crypto parameters
**.ni[*].encCycles = 2
**.ni[*].authCycles = 5

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 2

#########################################################
### NC-Enc-Auth-Gen - Encryption, then generation     ###
### authentication, then network coding (one MAC      ###
### flit per generation)                              ###
#########################################################
[Config NC-Enc-Auth-Gen]
# network interface
Mesh2D.niType = "HaecComm.NetworkInterfaces.NetworkInterfaceNcEncAuthGen"
**.ni[*].networkCoding = true

# traffic generation
#**.producer.injectionProb = 0.2/4 # 1 pair = 4 flits into the network (G2C3)
**.producer.injectionProb = 0.2/5 # 1 pair = 5 flits into the network (G2C4)

# network coding parameters
**.ni[*].generationSize = 2
#**.ni[*].numCombinations = 3
**.ni[*].numCombinations = 4

# crypto parameters
**.ni[*].encCycles = 2
**.ni[*].authCycles = 10

# retransmission buffer
**.ni[*].retransmissionBuffer.bufLookupCycles = 2